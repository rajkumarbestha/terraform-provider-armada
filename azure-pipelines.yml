# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    echo PWD
    pwd
    echo List
    ls -ltr
    echo moved
    mv !(gopath) '$(modulePath)'
    cd '$(modulePath)'
    echo in modulepath
    echo List    
    ls -ltr
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go version
    go get -v -t -d ./...
    if [ -f Gopkg.toml ]; then
        curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
        dep ensure
    fi
    go build -v .
  workingDirectory: '$(modulePath)'
  displayName: 'Get dependencies, then build'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(modulePath)/terraform-provider-armada.exe'
    archiveType: 'zip' 
    archiveFile: 'terraform-provider-armada.zip'

- task: DownloadSecureFile@1
  name: terraform_provider_armada
  displayName: 'Download Plugin'
  inputs:
    secureFile: '/home/vsts/work/1/s/terraform-provider-armada.zip'






